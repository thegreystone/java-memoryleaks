<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>se.hirt</groupId>
	<artifactId>java-memoryleaks</artifactId>
	<version>1.0-SNAPSHOT</version>
	<properties>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>se.hirt.memoryleaks.RunLeak</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<version>1.0-M1</version>
				<extensions>true</extensions>
				<configuration>
					<compilerProvider>${native.compiler.provider}</compilerProvider>
					<compilerExecutable>${native.compiler.executable}</compilerExecutable>
					<linkerExecutable>${native.linker.executable}</linkerExecutable>
					<sources>
						<source>
							<directory>${basedir}/src/main/cpp</directory>
							<fileNames>
								<fileName>memleak.cpp</fileName>
							</fileNames>
						</source>
					</sources>
					<compilerStartOptions>
						<compilerStartOption>${native.compiler.include.flags}</compilerStartOption>
					</compilerStartOptions>
					<compilerEndOptions>
						<compilerEndOption>${native.compiler.end.flags}</compilerEndOption>
					</compilerEndOptions>
					<linkerStartOptions>
						<linkerStartOption>${native.linker.flags}</linkerStartOption>
					</linkerStartOptions>
					<linkerEndOptions>
						<linkerEndOption>${native.linker.end.flags}</linkerEndOption>
					</linkerEndOptions>
					<javahOS>win32</javahOS>
					<classifier>native</classifier>
				</configuration>
				<executions>
					<execution>
						<id>compile-native</id>
						<phase>process-classes</phase>
						<goals>
							<goal>compile</goal>
							<goal>link</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/bin.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
					<archive>
						<manifest>
							<mainClass>se.hirt.memoryleaks.RunLeak</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<native.compiler.provider>msvc</native.compiler.provider>
				<native.compiler.executable>cl</native.compiler.executable>
				<native.linker.executable>link</native.linker.executable>
				<native.compiler.include.flags>/I${java.home}/include /I${java.home}/include/win32</native.compiler.include.flags>
				<native.compiler.end.flags>/EHsc</native.compiler.end.flags>
				<native.linker.flags>/DLL</native.linker.flags>
				<native.linker.end.flags>/OUT:${project.build.directory}/memleak.dll</native.linker.end.flags>
			</properties>
		</profile>
		<profile>
			<id>mac</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<native.compiler.provider>generic-classic</native.compiler.provider>
				<native.compiler.executable>g++</native.compiler.executable>
				<native.linker.executable>g++</native.linker.executable>
				<native.compiler.include.flags>-I${java.home}/include -I${java.home}/include/darwin</native.compiler.include.flags>
				<native.compiler.end.flags>-fPIC -shared</native.compiler.end.flags>
				<native.linker.flags>-shared -dynamiclib</native.linker.flags>
				<native.linker.end.flags>-o ${project.build.directory}/libmemleak.dylib</native.linker.end.flags>
			</properties>
		</profile>
		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>unix</family>
					<name>Linux</name>
				</os>
			</activation>
			<properties>
				<native.compiler.provider>generic-classic</native.compiler.provider>
				<native.compiler.executable>g++</native.compiler.executable>
				<native.linker.executable>g++</native.linker.executable>
				<native.compiler.include.flags>-I${java.home}/include -I${java.home}/include/linux</native.compiler.include.flags>
				<native.compiler.end.flags>-fPIC -shared</native.compiler.end.flags>
				<native.linker.flags>-shared</native.linker.flags>
				<native.linker.end.flags>-o ${project.build.directory}/libmemleak.so</native.linker.end.flags>
			</properties>
		</profile>
	</profiles>
</project>
